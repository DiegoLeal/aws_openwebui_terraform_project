name: Terraform AWS Deploy and Upload # Nome do workflow para refletir o que ele faz

on:
  push:
    branches:
      - main

jobs:
  deploy_and_upload: # Nome do job
    name: 'Deploy Infra and Upload PDF'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_pub_key: ${{ secrets.aws_pub_key }}
      TF_LOG: TRACE
      TF_LOG_PATH: tf_trace.log

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan # Salva o plano para usar no apply (boa prática)

      - name: Terraform Apply # *** NOVA ETAPA OU DESCOMENTAR ESTA LINHA ***
        run: terraform apply -auto-approve tfplan # Aplica o plano salvo
        # Note: -auto-approve é necessário para aplicar sem interação manual.
        # Use com cautela em ambientes de produção ou adicione um passo de aprovação manual.

      # --- Etapas para Upload de PDFs ---
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Ou a sua variável/secret de região

      - name: Get S3 Bucket Name from Terraform Output
        id: get_bucket_name # Define um ID para referenciar o output desta etapa
        # CORRIGIDO: O nome do output agora corresponde ao seu outputs.tf
        run: echo "S3_BUCKET_NAME=$(terraform output -raw s3_bucket_name_output)" >> "$GITHUB_OUTPUT"
        working-directory: .
        
      - name: Upload AWS CLI PDF to S3
        run: |
          PDF_FILE_PATH="./docs/AWS Command Line Interface.pdf"
          BUCKET_NAME="${{ steps.get_bucket_name.outputs.S3_BUCKET_NAME }}"
          S3_DEST_KEY="docs/AWS_Command_Line_Interface.pdf" # ou "docs/AWS Command Line Interface.pdf"

          echo "Iniciando upload de $PDF_FILE_PATH para s3://$BUCKET_NAME/$S3_DEST_KEY"

          if [ -f "$PDF_FILE_PATH" ]; then
            aws s3 cp "$PDF_FILE_PATH" "s3://$BUCKET_NAME/$S3_DEST_KEY" # --acl public-read se necessário
            echo "PDF '$PDF_FILE_PATH' enviado com sucesso para s3://$BUCKET_NAME/$S3_DEST_KEY"
          else
            echo "Arquivo PDF '$PDF_FILE_PATH' não encontrado. Pulando o upload."
            exit 1
          fi